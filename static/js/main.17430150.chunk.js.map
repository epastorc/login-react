{"version":3,"sources":["serviceWorker.ts","features/auth/state/actions.ts","store/utils.ts","features/auth/state/reducer.ts","features/main/dashboard/main/store/actions.ts","features/main/dashboard/main/store/reducer.ts","features/main/dashboard/settings/store/actions.ts","features/main/dashboard/settings/store/reducer.ts","store/root-reducer.ts","features/app/epics.ts","features/auth/state/epics.ts","features/main/dashboard/main/store/epics.ts","features/main/dashboard/settings/store/epics.ts","store/root-epic.ts","services/logger/logger-service.ts","services/login/firebase-conf.ts","services/storage/local-storage-service.ts","services/jwt/decoder-jwt-service.ts","services/login/login-service.ts","services/api/api.constants.ts","services/index.ts","services/api/fact-animal-service.ts","services/api/api.service.ts","store/index.ts","features/auth/components/LoginForm.tsx","features/auth/page/Login.tsx","routes/Home.tsx","features/main/dashboard/components/NavBar.tsx","layouts/MainLayout.tsx","features/main/dashboard/main/store/selectors.ts","features/main/dashboard/components/FactAnimalItem.tsx","features/main/dashboard/main/components/FactCatList.tsx","features/main/dashboard/main/page/DashBoardContent.tsx","routes/DashBoard.tsx","features/main/dashboard/settings/store/selectors.ts","features/main/dashboard/settings/components/FactDogList.tsx","features/main/dashboard/settings/page/Setting.tsx","routes/Setting.tsx","features/auth/state/selectors.ts","router-paths.ts","routes/Main.tsx","components/GuardedRoute.tsx","Route.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","loadUserAsync","createAsyncAction","loginUserArticleAsync","redirectToHome","composeEnhancers","compose","reducer","combineReducers","isLoadingLogin","createReducer","handleAction","request","state","action","success","failure","isSignedIn","error","token","payload","user","requestCatFacts","factcats","isLoading","requestDogFacts","factdogs","rootReducer","history","router","connectRouter","auth","factcat","factdog","persistArticlesInLocalStorage","action$","store","_ref","localStorage","pipe","filter","isActionOf","tap","_","set","value","ignoreElements","loadUser","state$","api","switchMap","from","login","map","catchError","message","of","createAuthEpic","_ref2","redirectTo","_ref3","dispatch","push","FactAnimalApi","getFactCat","getFactDog","combineEpics","apply","Object","toConsumableArray","values","app","concat","logger_service","log","console","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","version","APP_VERSION","PREFIX","key","serializedValue","JSON","stringify","setItem","Error","get","getItem","parse","decode","jwt","base64","split","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","_x","_login","this","arguments","_callee","userAux","regenerator_default","a","wrap","_context","prev","next","signInWithEmailAndPassword","name","password","currentUser","sent","getIdToken","abrupt","t0","loggerService","stop","_loadUser","_callee2","parseToken","_context2","decodeService","email","URL_API_FACT_CAT","services","logger","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","data","ApiGeneric","pathEndPoint","axios","create","baseURL","timeout","route","epicMiddleware","createEpicMiddleware","dependencies","createHashHistory","middlewares","routerMiddleware","enhancer","applyMiddleware","createStore","run","rootEpic","useStyles","makeStyles","theme","root","width","height","display","justifyContent","alignItems","form","boxShadow","backgroundColor","padding","borderRadius","flexDirection","input","marginBottom","submit","color","border","marginTop","margin","withFormik","enableReinitialize","mapPropsToValues","handleSubmit","props","setSubmitting","isSubmitting","dirty","classes","react_default","createElement","className","formik_esm","htmlFor","placeholder","component","type","required","autoFocus","disabled","dispatchProps","createLoginUser","objectSpread","connect","components_LoginForm","Home","page_Login","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","link","marginRight","fontSize","title","flexGrow","appBarSpacer","mixins","NavBar","CssBaseline","AppBar","position","clsx","Toolbar","Typography","variant","noWrap","react_router_dom","to","MainLayout","children","components_NavBar","FactAnimalItem","React","memo","factanimal","header","Fragment","text","areEqual","FactCatList","style","fact","index","components_FactAnimalItem","DashboardContent","_this$props","react_loading_default","components_FactCatList","Component","selectors","DashBoard","DashBoardContent","FactDogList","getDogFacts","Setting","length","components_FactDogList","routes_Setting","page_Setting","getUser","pathsMap","home","main","dashboard","setting","getPath","pathCb","_len","params","Array","_key","Main","layouts_MainLayout","react_router","path","render","GuardedRoute","Routes","exact","components_GuardedRoute","App","es","esm","Route","ReactDOM","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17430150.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { User } from 'AuthModels';\nimport { createAsyncAction } from 'typesafe-actions';\n\nexport const loadUserAsync = createAsyncAction(\n  'LOAD_USER_REQUEST',\n  'LOAD_USER_SUCCESS',\n  'LOAD_USER_FAILURE'\n)<undefined, User, string>();\n\nexport const loginUserArticleAsync = createAsyncAction(\n  'CREATE_LOGIN_REQUEST',\n  'CREATE_LOGIN_SUCCESS',\n  'CREATE_LOGOUT_FAILURE'\n)<User, string, string>();\n\nexport const redirectToHome = createAsyncAction(\n  'REDIRECT_REQUEST',\n  'REDIRECT_SUCCESS',\n  'REDIRECT_FAILURE'\n)<undefined, undefined, undefined>();\n","import { compose } from 'redux';\n\nexport const composeEnhancers =\n  (process.env.NODE_ENV === 'development' &&\n    window &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n","import { User } from 'AuthModels';\nimport { combineReducers } from 'redux';\nimport { createReducer } from 'typesafe-actions';\n\nimport { loadUserAsync, loginUserArticleAsync } from './actions';\n\nconst reducer = combineReducers({\n  isLoadingLogin: createReducer(false as boolean)\n    .handleAction([loginUserArticleAsync.request], (state, action) => true)\n    .handleAction(\n      [loginUserArticleAsync.success, loginUserArticleAsync.failure],\n      (state, action) => false\n    ),\n    isSignedIn: createReducer(true as boolean)\n    .handleAction([loginUserArticleAsync.success, loadUserAsync.success], (state, action) => true)\n    .handleAction(\n      [loginUserArticleAsync.failure, loadUserAsync.failure],\n      (state, action) => false\n    ),\n  error: createReducer(false as boolean)\n    .handleAction([loginUserArticleAsync.failure], (state, action) => true)\n    .handleAction(\n      [loginUserArticleAsync.success],\n      (state, action) => false\n    ),\n  token: createReducer('' as string)\n    .handleAction(\n      [loginUserArticleAsync.success],\n      (state, action) => action.payload\n    ),\n  user: createReducer({} as User)\n  .handleAction(\n    [loadUserAsync.success],\n    (state, action) => action.payload\n  ),\n});\n\nexport default reducer;\n","import { FactAnimal } from 'DashboardModels';\nimport { createAsyncAction } from 'typesafe-actions';\n\nexport const requestCatFacts = createAsyncAction(\n  'REQUEST_FACTCAT_REQUEST',\n  'REQUEST_FACTCAT_SUCCESS',\n  'REQUEST_FACTCAT_FAILURE'\n)<undefined, FactAnimal[], string>();\n","import { combineReducers } from 'redux';\nimport { createReducer } from 'typesafe-actions';\nimport { FactAnimal } from 'DashboardModels';\n\nimport { requestCatFacts } from './actions';\n\nconst reducer = combineReducers({\n \n  factcats: createReducer([] as FactAnimal[])\n  .handleAction(\n    [requestCatFacts.success],\n    (state, action) => action.payload\n  ),\n  isLoading: createReducer(false as boolean)\n  .handleAction([requestCatFacts.request], (state, action) => true)\n  .handleAction(\n    [requestCatFacts.success, requestCatFacts.failure],\n    (state, action) => false\n  )\n});\n\nexport default reducer;\n","import { FactAnimal } from 'DashboardModels';\nimport { createAsyncAction } from 'typesafe-actions';\n\nexport const requestDogFacts = createAsyncAction(\n  'REQUEST_FACTDOG_REQUEST',\n  'REQUEST_FACTDOG_SUCCESS',\n  'REQUEST_FACTDOG_FAILURE'\n)<undefined, FactAnimal[], string>();\n","import { combineReducers } from 'redux';\nimport { createReducer } from 'typesafe-actions';\nimport { FactAnimal } from 'DashboardModels';\n\nimport { requestDogFacts } from './actions';\n\nconst reducer = combineReducers({\n \n  factdogs: createReducer([] as FactAnimal[])\n  .handleAction(\n    [requestDogFacts.success],\n    (state, action) => action.payload\n  ),\n  isLoading: createReducer(false as boolean)\n  .handleAction([requestDogFacts.request], (state, action) => true)\n  .handleAction(\n    [requestDogFacts.success, requestDogFacts.failure],\n    (state, action) => false\n  )\n});\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nimport auth from '../features/auth/state/reducer';\nimport factcat from '../features/main/dashboard/main/store/reducer';\nimport factdog from '../features/main/dashboard/settings/store/reducer';\n\nconst rootReducer = (history: History<any>) =>\n  combineReducers({\n    router: connectRouter(history),\n    auth,\n    factcat,\n    factdog,\n  });\n\nexport default rootReducer;\n","import { RootEpic } from 'RootType';\nimport { tap, ignoreElements, filter } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\n\nimport {\n  loginUserArticleAsync\n} from '../auth/state/actions';\n\nexport const persistArticlesInLocalStorage: RootEpic = (\n  action$,\n  store,\n  { localStorage }\n) =>\n  action$.pipe(\n    filter(\n      isActionOf([\n        loginUserArticleAsync.success,\n      ])\n    ),\n    tap(_ => {\n      localStorage.set('user', store.value.auth.token);\n    }),\n    ignoreElements()\n  );\n\n","import { RootEpic } from 'RootType';\nimport { from, of } from 'rxjs';\nimport { filter, switchMap, map, catchError } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { push } from 'connected-react-router'\n\nimport {\n  loadUserAsync,\n  loginUserArticleAsync,\n  redirectToHome\n} from './actions';\nimport store from '../../../store';\n\n\n\nexport const loadUser: RootEpic = (action$, state$, { api }) =>\n  action$.pipe(\n    filter(isActionOf(loadUserAsync.request)),\n    switchMap(action =>\n      from(api.login.loadUser()).pipe(\n        map(loadUserAsync.success),\n        catchError(message => of(loadUserAsync.failure(message)))\n      )\n    )\n  );\n\n\n\nexport const createAuthEpic: RootEpic = (action$, state$, { api }) =>\n  action$.pipe(\n    filter(isActionOf(loginUserArticleAsync.request)),\n    switchMap(action =>\n      from(api.login.login(action.payload)).pipe(\n        map(loginUserArticleAsync.success),\n        catchError(message => of(loginUserArticleAsync.failure(message)))\n      )\n    )\n  );\n\n\n  export const redirectTo: RootEpic = (action$, state$, { api }) =>\n  action$.pipe(\n    filter(isActionOf([loginUserArticleAsync.success, loadUserAsync.success])),\n    switchMap(() => {\n      store.dispatch(push('/main/dashboard'))\n      return of(redirectToHome.success());\n    }\n    )\n  );","import { RootEpic } from 'RootType';\nimport { from, of } from 'rxjs';\nimport { filter, switchMap, map, catchError } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\n\nimport {\n  requestCatFacts\n} from './actions';\n\n\n\n\n\nexport const createAuthEpic: RootEpic = (action$, state$, { api }) =>\n  action$.pipe(\n    filter(isActionOf(requestCatFacts.request)),\n    switchMap(action =>\n      from(api.FactAnimalApi.getFactCat()).pipe(\n        map(requestCatFacts.success),\n        catchError(message => of(requestCatFacts.failure(message)))\n      )\n    )\n  );\n\n","import { RootEpic } from 'RootType';\nimport { from, of } from 'rxjs';\nimport { filter, switchMap, map, catchError } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\n\nimport {\n  requestDogFacts\n} from './actions';\n\n\n\n\n\nexport const createAuthEpic: RootEpic = (action$, state$, { api }) =>\n  action$.pipe(\n    filter(isActionOf(requestDogFacts.request)),\n    switchMap(action =>\n      from(api.FactAnimalApi.getFactDog()).pipe(\n        map(requestDogFacts.success),\n        catchError(message => of(requestDogFacts.failure(message)))\n      )\n    )\n  );\n\n","import { combineEpics } from 'redux-observable';\n\nimport * as app from '../features/app/epics';\nimport * as auth from '../features/auth/state/epics';\nimport * as factcat from '../features/main/dashboard/main/store/epics';\nimport * as factdog from '../features/main/dashboard/settings/store/epics';\n\nexport default combineEpics(...Object.values(app), ...Object.values(auth), ...Object.values(factcat), ...Object.values(factdog));\n","// TODO: connect external client logging service here (e.g. Sentry SDK)\n// tslint:disable-next-line:no-console\nexport default { log: console.log };\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n    appId: process.env.REACT_APP_FIREBASE_APPID\n};\nconst app = firebase.initializeApp(config);\n\nexport {app};","const version = process.env.APP_VERSION || 0;\nconst PREFIX = `LOGIN_APP_v${version}::`;\n\nexport function set<T = object>(key: string, value: T): void {\n  if (!localStorage) {\n    return;\n  }\n\n  try {\n    const serializedValue = JSON.stringify(value);\n    localStorage.setItem(PREFIX + key, serializedValue);\n  } catch (error) {\n    throw new Error('store serialization failed');\n  }\n}\n\nexport function get<T = object>(key: string): T | undefined {\n  if (!localStorage) {\n    return;\n  }\n\n  try {\n    const serializedValue = localStorage.getItem(PREFIX + key);\n    if (serializedValue == null) {\n      return;\n    }\n    return JSON.parse(serializedValue);\n  } catch (error) {\n    throw new Error('store deserialization failed');\n  }\n}\n","import { JwtToken } from 'AuthModels';\n\nexport function decode(jwt: string): JwtToken {\n    const base64Url = jwt.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n\n    return JSON.parse(jsonPayload); \n}\n\n","import { User, JwtToken } from 'AuthModels';\n\nimport { app } from './firebase-conf';\nimport * as localStorage from '../storage/local-storage-service';\nimport loggerService from '../logger/logger-service';\nimport * as decodeService from '../jwt/decoder-jwt-service';\n\nexport async function login(user: User): Promise<string> {\n  try {\n    await app.auth().signInWithEmailAndPassword(user.name, user.password);\n\n    const userAux = await app.auth().currentUser;\n    if (userAux) {\n      const token = await userAux.getIdToken();\n      return token;\n    }\n    return '';\n  } catch (error) {\n    loggerService.log(error);\n    throw new Error();\n  }\n}\n\nexport async function loadUser(): Promise<User> {\n  const token: string = localStorage.get<string>('user') || '';\n  if(token){\n    const parseToken: JwtToken = decodeService.decode(token);\n    return { name: parseToken.email, password: '' };\n  }else {\n    throw new Error();\n  }\n}\n","export const URL_API_FACT_CAT = 'https://cat-fact.herokuapp.com/facts/'\n","import * as logger from './logger/logger-service';\nimport * as login from './login/login-service';\nimport FactAnimalApi from './api/fact-animal-service';\nimport * as localStorage from './storage/local-storage-service';\n\nexport default {\n  logger,\n  localStorage,\n  api: {\n    login,\n    FactAnimalApi\n  },\n};\n","import { FactAnimal } from 'DashboardModels';\n\nimport ApiGeneric  from './api.service';\nimport { URL_API_FACT_CAT } from './api.constants';\n\n class FactAnimalApi extends  ApiGeneric{\n       \n        constructor() {\n            super(URL_API_FACT_CAT);\n        }\n    \n        async getFactCat(): Promise<FactAnimal[]> {\n                const route = 'random?animal_type=cat&amount=7';\n                const data = await this.request.get(route);\n                return data.data as FactAnimal[];\n        }\n\n        async getFactDog(): Promise<FactAnimal[]> {\n                const route = 'random?animal_type=dog&amount=7';\n                const data = await this.request.get(route);\n                return data.data as FactAnimal[];\n        }\n    \n    }\n    \n    export default new FactAnimalApi();","import axios, { AxiosInstance }  from 'axios';\n\nexport default class ApiGeneric {\n    request: AxiosInstance;\n    constructor(pathEndPoint: string) {\n        this.request = axios.create({\n            baseURL: pathEndPoint,\n            timeout: 10000\n        });\n    }\n\n    get(route: string) {\n        return this.request.get(route);\n    }\n\n}\n\n\n","import { RootAction, RootState, Services } from 'RootType';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createHashHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport { composeEnhancers } from './utils';\nimport rootReducer from './root-reducer';\nimport rootEpic from './root-epic';\nimport services from '../services';\n\nexport const epicMiddleware = createEpicMiddleware<\n  RootAction,\n  RootAction,\n  RootState,\n  Services\n>({\n  dependencies: services,\n});\n\n// configure middlewares\nexport const history = createHashHistory();\nconst middlewares = [routerMiddleware(history), epicMiddleware];\n// compose enhancers\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\n// rehydrate state on app start\nconst initialState = {};\n\n// create store\nconst store = createStore(rootReducer(history), initialState, enhancer);\n\nepicMiddleware.run(rootEpic);\n\n// export store singleton instance\nexport default store;\n","import React from 'react';\nimport { Form, FormikProps, Field, withFormik, ErrorMessage } from 'formik';\nimport { User } from 'AuthModels';\nimport { compose } from 'redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    form: {\n        boxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\n        backgroundColor: 'white',\n        padding: '2%',\n        borderRadius: '4px',\n        width: '24%',\n        height: '24%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    input: {\n        width: '98%',\n        marginBottom: '15px'\n    },\n    submit: {\n        width: '25%',\n        height: '12%',\n        backgroundColor: '#f7b500',\n        color: 'white',\n        border: '0',\n        borderRadius: '3px',\n        marginTop: '10px',\n    },\n    error: {\n        margin: '0',\n        color: 'red'\n    }\n}));\n\n\ntype FormValues = Pick<User, 'name' | 'password'> & {};\n\n\ntype Props = {\n    submit: Function;\n    isLoading: boolean;\n    error: boolean;\n    user?: User;\n};\n\n\nconst LoginForm: React.FC<Props & FormikProps<FormValues>> = props => {\n    const { isSubmitting, dirty, isLoading, error } = props;\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n\n            <Form className={classes.form}>\n\n                <div >\n                    <label htmlFor=\"name\">Login</label>\n                    <br />\n                    <Field\n                        className={classes.input}\n                        name=\"name\"\n                        placeholder=\"Email\"\n                        component=\"input\"\n                        type=\"text\"\n                        required\n                        autoFocus\n                    />\n                    <ErrorMessage name=\"name\" />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <br />\n                    <Field\n                        className={classes.input}\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        component=\"input\"\n                        required\n                        type=\"password\"\n                    />\n                    <ErrorMessage name=\"password\" />\n                </div>\n                <button className={classes.submit} type=\"submit\" disabled={!dirty || isSubmitting}>\n                    {isLoading ? 'Loading' : 'Submit'}\n                </button>\n                <div>\n                    {error && <p className={classes.error}>There are some issues in the login</p>}\n                </div>\n            </Form>\n        </div>\n    );\n};\n\nexport default compose(\n    withFormik<Props, FormValues>({\n        enableReinitialize: true,\n        mapPropsToValues: ({ user: data }) => ({\n            name: (data && data.name) || '',\n            password: (data && data.password) || '',\n        }),\n        handleSubmit: (values, form) => {\n            form.props.submit(values);\n            form.setSubmitting(false);\n        },\n    })\n)(LoginForm);\n","import { RootState } from 'RootType';\nimport { User } from 'AuthModels';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { loginUserArticleAsync } from '../state/actions';\nimport LoginForm from '../components/LoginForm';\n\nconst mapStateToProps = (state: RootState) => ({\n    isLoading: state.auth.isLoadingLogin,\n    error: state.auth.error,\n});\n\nconst dispatchProps = {\n    createLoginUser: (values: User) =>\n        loginUserArticleAsync.request({\n            ...values\n        })\n};\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\n\nconst Login: React.FC<Props> = ({ createLoginUser, isLoading, error}) => {\n    return (\n      \n        <LoginForm submit={createLoginUser} isLoading={isLoading} error={error}/>\n    );\n  };\n\nexport default connect(mapStateToProps, dispatchProps)(Login);\n\n","import React from 'react';\n\nimport Login from '../features/auth/page/Login';\n\nexport default () => (\n    <Login/>\n);\n\n\n","\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    backgroundColor:'#f7b500',\n    width: '100%',\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  link:{\n    color:'black',\n    marginRight:'10px',\n    fontSize: '1.3rem'\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar\n}));\n\ntype Props = {\n  name: string;\n};\n\nconst NavBar: React.FC<Props> = ({ name }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" color={'inherit'} className={clsx(classes.appBar, classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n          <Link className={classes.link} to=\"/main/dashboard\">\n            Home\n          </Link>\n          <Link className={classes.link}to=\"/main/setting\">\n            Settings\n          </Link>\n          <span>\n            {name}\n          </span>\n        </Toolbar>\n      </AppBar>\n    </div >\n  );\n};\n\nexport default NavBar;","import React, { FC } from 'react';\n\nimport './Main.css';\nimport NavBar from '../features/main/dashboard/components/NavBar';\n\ntype Props = {\n  name: string\n};\n\nconst MainLayout: FC<Props> = ({ children, name }) => (\n  <div className=\"App\">\n    <header>\n      <NavBar name={name} />\n    </header>\n    <main className=\"App-main\">{children}</main>\n  </div>\n);\n\nexport default MainLayout;\n","import { RootState } from 'RootType';\n// import { createSelector } from 'reselect';\n\nexport const getFactCat = (state: RootState) => state.factcat.factcats;\nexport const isLoading = (state: RootState) => state.factcat.isLoading;\n","import React from 'react';\nimport areEqual from 'fast-deep-equal';\nimport { FactAnimal } from 'DashboardModels';\n\ntype Props = {\n  factanimal: FactAnimal;\n  header: string\n};\n\nconst FactAnimalItem = React.memo<Props> (({ factanimal, header }) => {\n  return (\n    <React.Fragment>\n      <h3>{header}</h3>\n\n      <p>{factanimal.text}</p>\n    </React.Fragment>\n  );\n}, areEqual);\n\nexport default FactAnimalItem;\n","import React from 'react';\nimport { FactAnimal } from 'DashboardModels';\n\nimport FactAnimalItem  from '../../components/FactAnimalItem';\n\n\ntype Props = {\n  factcat: FactAnimal[];\n};\n\nconst FactCatList: React.FC<Props> = ({ factcat }) => {\n  return (\n    <div className=\"container-list\">\n      <h3>List of fact about cats</h3>\n\n      <div style={{ width: '50vw'}}>\n          {factcat.map((fact, index) => (\n              <FactAnimalItem key={`factcatitem-${index}`} factanimal={fact} header={`Fact ${index + 1}:`}/>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FactCatList;\n","import { RootState } from 'RootType';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactLoading from 'react-loading';\n\nimport { requestCatFacts } from '../store/actions';\nimport * as selectors from '../store/selectors';\nimport FactCatList from '../components/FactCatList';\n\n\nconst mapStateToProps = (state: RootState) => ({\n    factcat: selectors.getFactCat(state),\n    isLoading: selectors.isLoading(state)\n});\nconst dispatchProps = {\n    getFactCat: () => requestCatFacts.request()\n};\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\n\nclass DashboardContent extends Component<Props> {\n    componentDidMount() {\n        this.props.getFactCat();\n    }\n    render() {\n        const { factcat, isLoading } = this.props;\n        return isLoading ? <ReactLoading color={'#f7b500'} height={200} width={200} /> : <FactCatList factcat={factcat} />; \n    }\n}\n\nexport default connect(mapStateToProps, dispatchProps)(DashboardContent);\n\n","import React from 'react';\n\nimport DashboardContent from '../features/main/dashboard/main/page/DashBoardContent';\n\nexport default () => (\n    <DashboardContent/>\n);\n\n\n","import { RootState } from 'RootType';\n// import { createSelector } from 'reselect';\n\nexport const getFactDog = (state: RootState) => state.factdog.factdogs;\nexport const isLoading = (state: RootState) => state.factdog.isLoading;\n","import React from 'react';\nimport { FactAnimal } from 'DashboardModels';\n\nimport FactAnimalItem  from '../../components/FactAnimalItem';\n\ntype Props = {\n  factcat: FactAnimal[];\n};\n\nconst FactDogList: React.FC<Props> = ({ factcat }) => {\n  const header = 'List of fact about dogs';\n  return (\n    <div className=\"container-list\">\n      <h3>{header}</h3>\n\n      <div style={{ width: '50vw'}}>\n          {factcat.map((fact, index) => (\n              <FactAnimalItem key={`factdogitem-${index}`} factanimal={fact} header={`Fact Dog ${index + 1}:`}/>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FactDogList;\n","import { RootState } from 'RootType';\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactLoading from 'react-loading';\n\nimport { requestDogFacts } from '../store/actions';\nimport * as selectors from '../store/selectors';\nimport FactDogList from '../components/FactDogList';\n\n\nconst mapStateToProps = (state: RootState) => ({\n    factdogs: selectors.getFactDog(state),\n    isLoading: selectors.isLoading(state),\n    getDogFacts: () => requestDogFacts.request()\n});\nconst dispatchProps = {\n    getDogFacts: () => requestDogFacts.request()\n};\ntype Props = ReturnType<typeof mapStateToProps>;\n\nclass Setting extends Component<Props> {\n    componentDidMount() {\n        this.props.getDogFacts();\n    }\n    render() {\n        const { factdogs, isLoading } = this.props;\n        return isLoading && factdogs.length > 0 ? <ReactLoading color={'#f7b500'} height={200} width={200} /> : <FactDogList factcat={factdogs} />;\n    }\n}\n\nexport default connect(mapStateToProps, dispatchProps)(Setting);\n\n","import React from 'react';\n\nimport Setting from '../features/main/dashboard/settings/page/Setting';\n\nexport default () => (\n    <Setting/>\n);\n\n\n","import { RootState } from 'RootType';\n// import { createSelector } from 'reselect';\n\nexport const getUser = (state: RootState) => state.auth.user;\nexport const isSignedIn = (state: RootState) => state.auth.isSignedIn;\nexport const getToken = (state: RootState) => state.auth.token;\n","const pathsMap = {\n  home: () => '/',\n  main: () => '/main/',\n  dashboard: () => '/main/dashboard',\n  setting: () => '/main/setting',\n};\ntype PathsMap = typeof pathsMap;\n\nexport const getPath = <TRoute extends keyof PathsMap>(\n  route: TRoute,\n  ...params: Parameters<PathsMap[TRoute]>\n) => {\n  const pathCb: (...args: any[]) => string = pathsMap[route];\n\n  return pathCb(...params);\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {  Route } from 'react-router-dom';\nimport { RootState } from 'RootType';\n\nimport MainLayout from '../layouts/MainLayout';\nimport DashBoard from '../routes/DashBoard';\nimport Setting from '../routes/Setting';\nimport * as selectors from '../features/auth/state/selectors';\nimport { getPath } from '../router-paths';\nimport store from '../store';\nimport { loadUserAsync } from '../features/auth/state/actions';\n\nconst mapStateToProps = (state: RootState) => ({\n  user: selectors.getUser(state)\n});\nconst dispatchProps = {};\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\n\nclass Main extends Component<Props> {\n  componentDidMount() {\n    store.dispatch(loadUserAsync.request());\n  }\n  \n  render() {\n    const { user } = this.props;\n    return (\n      <MainLayout name={user.name}>\n      <Route path={getPath('dashboard')}render={DashBoard} />\n      <Route path={getPath('setting')} render={Setting} />\n    </MainLayout>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, {})(Main);\n","\nimport  React from  \"react\";\nimport { Route, Redirect } from  \"react-router\";\n\ntype Props = {\n    component: any;\n    path: string;\n    isSignedIn: boolean;\n  };\n\nconst  GuardedRoute: React.FC<Props> = (props) => {\n    const condition = props.isSignedIn;\n    return condition ? (<Route  path={props.path} component={props.component} />) : \n    (<Redirect  to=\"/\"  />);\n};\nexport  default  GuardedRoute;","import { RootState } from 'RootType';\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router';\n\nimport Home from './routes/Home';\nimport Main from './routes/Main';\nimport { getPath } from './router-paths';\nimport GuardedRoute from './components/GuardedRoute';\nimport * as selectors from './features/auth/state/selectors';\n\nconst mapStateToProps = (state: RootState) => ({\n  user: selectors.getUser(state),\n  isSignedIn: selectors.isSignedIn(state),\n});\nconst dispatchProps = {};\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\n\nclass Routes extends Component<Props> {\n  render() {\n    const { isSignedIn }  = this.props;\n    return (\n      <React.Fragment>\n        <Route exact path={getPath('home')} render={Home} />\n        <GuardedRoute path={getPath('main')}  isSignedIn={isSignedIn} component={Main} />\n      </React.Fragment>\n    );\n  }\n}\nexport default connect(mapStateToProps, {})(Routes);","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport { loadUserAsync } from './features/auth/state/actions';\nimport store, { history } from './store';\nimport Routes from './Route';\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUserAsync.request());\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <Routes />\n        </ConnectedRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n","import '@babel/polyfill';\nimport 'tslib';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n<React.StrictMode>\n    <App />\n</React.StrictMode>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}